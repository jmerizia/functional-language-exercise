(def fib n (do
    (let a (fib (- n 1)))
    (let b (fib (- n 2)))
    (match n
        0   : 0
        1   : 1
        ANY : (+ a b)
    )
))
(print (fib 25))

(def gcd a b (? (= a 0) b (gcd (% b a) a)))
(print (gcd 2 10))

(def square x (* x x))
(do
    (let x 3)
    (let y 4)
    (let z 5)
    (print
        (=
            (+ (square x) (square y))
            (square z)
        )
    )
)
