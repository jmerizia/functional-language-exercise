print r => [ (print_int (1 r)) , (if (2 r) (print (2 r)) (nil)) ]
range n => (if (= n 1) [1, nil] [n, (range (- n 1))])
(print (range 2))

execute (print (range 2)), 0  --function user
    r_T1 = (range 2), 0
    execute [ (print_int (1 r_T1)) , (if (2 r_T1) (print (2 r_T1)) (nil)) ], 0  --datapair
        execute (print_int (1 r_T1)), 0  --function system
            execute (1 r_T1), 0  --function system
                execute r_T1, 1
                    force r_T1, 1
                        execute (range 2), 1  --function user
                            n_T2 = 2
                            execute (if (= n_T2 1) [1, nil] [n_T2, (range (- n_T2 1))]), 1 --function system
                                execute (= n_T2 1)  --function system
                                    execute n_T2  --base thunk
                                        force n_T2
                                            execute 2  --base integer
                                                return 2
                                            return 2
                                        return 2
                                    execute 1  --base integer
                                        return 1
                                    return 0
                                execute [n_T2, (range (- n_T2 1))], 1  --datapair (consumes right)
                                    execute n_T2, 0  --function user
                                        force n_T2  --already forced
                                            return 2
                                        return 2
                                    return 2
                                return 2
                            return 2
                        return 2
                    return 2
                return 2
            cout 2
            return nil
        execute (if (2 r_T1) (print (2 r_T1)) (nil)), 0  --function system
            execute (2 r_T1), 0  --function system
                execute r_T1, 2  --thunk
                    force r_T1, 2
                        execute (range 2), 2  --function user
                            n_T3 = 2
                            execute (if (= n_T3 1) [1, nil] [n_T3, (range (- n_T3 1))]), 2  --function system
                                execute (= n_T3 1), 0  --function system
                                    execute n_T3, 0  --thunk
                                        force n_t3, 0
                                            execute 2, 0  --base integer
                                                return 2
                                            return 2
                                        return 2
                                    execute 1, 0  --base integer
                                        return 1
                                    return 0
                                execute [n_T3, (range (- n_T3 1))], 2  --datapair
                                    execute (range (- n_T3 1)), 0  --function user
                                        n_T4 = (- n_T3 1)
                                        execute (if (= n_T4 1) [1, nil] [n_T4, (range (- n_T4 1))]), 0  --function system
                                            execute (= n_T4 1), 0  --function system
                                                execute n_T4, 0  --thunk
                                                    force n_T4, 0
                                                        execute (- n_T3 1), 0  --function system
                                                            execute n_T3, 0  --thunk
                                                                force n_T3, 0
                                                                    execute 2
                                                                        return 2
                                                                    return 2
                                                                return 2
                                                            execute 1  --base integer
                                                                return 1
                                                            return 1
                                                        return 1
                                                    return 1
                                                execute 1
                                                    return 1
                                                return 1
                                            execute [1, nil]  --datapair
                                                execute 1
                                                    return 1
                                                execute nil
                                                    return nil
                                                return [1, nil]
                                            return [1, nil]
                                        return [1, nil]
                                    return [1, nil]
                                return [1, nil]
                            return [1, nil]
                        return [1, nil]
                    return [1, nil]
                return [1, nil]
            execute (print (2 r_T1)), 0  --function user
                r_T5 = (2 r_T1)
                execute [ (print_int (1 r_T5)) , (if (2 r_T5) (print (2 r_T5)) (nil)) ], 0  --datapair
                    execute (print_int (1 r_T5)), 0  --function system
                        execute (1 r_T5), 0  --function system
                            execute r_T5, 1  --thunk
                                execute (2 r_T1), 1  --function system, memoized
                                    return 1
                                return 1
                            return 1
                        cout 1
                        return nil
                    execute (if (2 r_T5) (print (2 r_T5)) (nil)), 0  --function system
                        execute (if (2 r_T5) (print (2 r_T5)) (nil)), 0  --function system
                            execute (2 r_T5), 0  --function system
                                execute r_T5, 2  --thunk
                                    execute (2 r_T1), 2  --function system, memoized
                                        return nil
                                    return nil
                                return nil
                            execute (nil)  --base nil
                                return nil
                            return nil
                        execute (nil)  --base nil
                            return nil
                        return nil
                    return [nil, nil]
                return [nil, nil]
            return [nil, nil]
        return [nil, nil]

// TODO: Data Pair should instead return a pair of thunks,
    that way, you don't accidentally calculate the whole range upfront :/
